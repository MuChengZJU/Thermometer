C51 COMPILER V9.54   LCD_1602                                                              09/03/2024 00:43:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD_1602
OBJECT MODULE PLACED IN .\Objects\lcd_1602.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE src\lcd_1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\lcd_1602.lst) TABS(2) OBJECT(.\Objects\lcd_1602.obj)

line level    source

   1          /**
   2           * @file lcd_1602.c
   3           * @author MuChengZJU (MuChengZJU@qq.com)
   4           * @brief LCD screen 1602A driver
   5           * @version 0.1
   6           * @date 2024-09-02
   7           *
   8           *
   9           */
  10          
  11          #include "lcd_1602.h"
  12          
  13          // 1602A的连接51的针脚
  14          sbit LCD_RS = P2 ^ 4;
  15          sbit LCD_RW = P2 ^ 5;
  16          sbit LCD_EN = P2 ^ 6;
  17          
  18          // 1602A的数据总线D0~D7连接51的P1
  19          #define LCD_BUS P1 // 此处P1可根据情况修改(若P0，需写1高电平)
  20          
  21          void lcd_print(uchar *line1, uchar *line2)
  22          {
  23   1          uchar i;          // 在函数开始处声明变量i
  24   1          clear();          // 清屏
  25   1          set_cursor(0, 0); // 设置光标到第一行第一个字符位置
  26   1          for (i = 0; line1[i] != '\0'; i++) {
  27   2              write_data(line1[i]);
  28   2          }
  29   1          set_cursor(1, 0); // 设置光标到第二行第一个字符位置
  30   1          for (i = 0; line2[i] != '\0'; i++) {
  31   2              write_data(line2[i]);
  32   2          }
  33   1      }
  34          
  35          void lcd_init()
  36          {
  37   1          delay(15);       // 上电后等待15ms，等待LCD电源稳定
  38   1          write_cmd(0x38); // 8位数据接口，2行显示，5*7点阵
  39   1          delay(5);
  40   1          // write_cmd(0x0c); // 显示器开，光标关，光标闪烁关
  41   1          // write_cmd(0x06); // 光标右移，字符不动
  42   1          // write_cmd(0x01); // 清屏
  43   1      
  44   1          write_cmd(0x39);
  45   1          write_cmd(0x08);
  46   1          write_cmd(0x01);
  47   1          write_cmd(0x06);
  48   1          delay(5);
  49   1          write_cmd(0x0c);
  50   1          write_cmd(0x14);
  51   1          write_cmd(12);
  52   1      }
  53          
  54          void clear()
C51 COMPILER V9.54   LCD_1602                                                              09/03/2024 00:43:01 PAGE 2   

  55          {
  56   1          wait_busy();
  57   1          write_cmd(0x01);
  58   1          delay(5);
  59   1      }
  60          
  61          void delay(uint xms)
  62          {
  63   1          uint i, j;
  64   1          for (i = 0; i < xms; i++)
  65   1              for (j = 0; j < 120; j++) // 这里120是一个经验值，根据晶振频率和机器周期计算得出的
  66   1                  ;                     // 空循环体，用于延时
  67   1      }
  68          
  69          void set_cursor(uchar x, uchar y)
  70          {
  71   1          uchar addr;
  72   1          if (y == 0) {
  73   2              addr = 0x00 + x;
  74   2          } else {
  75   2              addr = 0x40 + x;
  76   2          }
  77   1          write_cmd(0x80 + addr);
  78   1      }
  79          
  80          void wait_busy()
  81          {
  82   1          uchar busy;
  83   1          // LCD_BUS = 0xff; // P0开漏需要
  84   1          LCD_RS = 0;
  85   1          LCD_RW = 1;
  86   1          do {
  87   2              LCD_EN = 1;
  88   2              delay(1);
  89   2              busy   = LCD_BUS;
  90   2              LCD_EN = 0;
  91   2          } while (busy & 0x80);
  92   1          // LCD_BUS = 0x00; // P0开漏需要
  93   1      }
  94          
  95          void write_data(uchar dat)
  96          {
  97   1          wait_busy();
  98   1          LCD_RS  = 1;
  99   1          LCD_RW  = 0;
 100   1          LCD_BUS = dat; // data is reserved word, so use dat.
 101   1          LCD_EN  = 1;
 102   1          delay(5);
 103   1          LCD_EN = 0;
 104   1      }
 105          
 106          void write_cmd(uchar cmd)
 107          {
 108   1          wait_busy();
 109   1          LCD_RS  = 0;
 110   1          LCD_RW  = 0;
 111   1          LCD_BUS = cmd;
 112   1          LCD_EN  = 1;
 113   1          delay(5);
 114   1          LCD_EN = 0;
 115   1      }

C51 COMPILER V9.54   LCD_1602                                                              09/03/2024 00:43:01 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
